rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function roleOf(uid) { return get(/databases/$(database)/documents/users/$(uid)).data.role; }
    function isAdmin() { return isSignedIn() && roleOf(request.auth.uid) in ['admin','adminpp']; }
    function isAdminPP() { return isSignedIn() && roleOf(request.auth.uid) == 'adminpp'; }

    match /users/{uid} {
      allow read: if isSignedIn();
      allow update: if isOwner(uid) || isAdminPP();
      allow create: if isAdmin();
    }

    match /tasks/{taskId} {
      allow read: if isSignedIn();
      allow create: if isOwner(request.resource.data.ownerUid) || isAdminPP();
      allow update, delete: if isOwner(resource.data.ownerUid) || isAdminPP();
    }

    match /presence/{uid} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(uid);
    }

    match /meta/themesSync/{uid} {
      allow read: if isSignedIn();
      allow write: if isOwner(uid) || isAdminPP();
    }
  }
}